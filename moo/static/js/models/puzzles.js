// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define([], function() {
    var PuzzleCollection, PuzzleModel, _ref, _ref1;
    PuzzleModel = (function(_super) {
      __extends(PuzzleModel, _super);

      function PuzzleModel() {
        _ref = PuzzleModel.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      PuzzleModel.prototype.defaults = function() {
        return {
          name: null,
          solve_url: null,
          level: null,
          solved: null,
          length: null,
          metakey: null,
          password: null
        };
      };

      PuzzleModel.prototype.submitPassword = function(password) {
        var _this = this;
        return $.ajax({
          type: 'POST',
          url: this.get('solve_url'),
          data: {
            'password': password.toUpperCase()
          },
          dataType: 'json'
        }).done(function(result) {
          var nextPuzzle;
          if (result.puzzle) {
            _this.set(_this.parse(result.puzzle));
          }
          if (result.next_puzzle) {
            nextPuzzle = new PuzzleModel();
            nextPuzzle.set(nextPuzzle.parse(result.next_puzzle));
            _this.collection.add(nextPuzzle);
          }
          return alert(result.responseJSON.message);
        });
      };

      return PuzzleModel;

    })(Backbone.Model);
    PuzzleCollection = (function(_super) {
      __extends(PuzzleCollection, _super);

      function PuzzleCollection() {
        _ref1 = PuzzleCollection.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      PuzzleCollection.prototype.url = '/api/puzzles';

      PuzzleCollection.prototype.model = PuzzleModel;

      return PuzzleCollection;

    })(Backbone.Collection);
    return {
      Collection: PuzzleCollection,
      Model: PuzzleModel
    };
  });

}).call(this);
